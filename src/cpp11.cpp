// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// algorithm.cpp
double nth_element(std::vector<double> copy, int n);
extern "C" SEXP _tumopp_nth_element(SEXP copy, SEXP n) {
  BEGIN_CPP11
    return cpp11::as_sexp(nth_element(cpp11::as_cpp<cpp11::decay_t<std::vector<double>>>(copy), cpp11::as_cpp<cpp11::decay_t<int>>(n)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_tumopp_nth_element", (DL_FUNC) &_tumopp_nth_element, 2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_tumopp(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
