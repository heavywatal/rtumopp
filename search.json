[{"path":"https://heavywatal.github.io/rtumopp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2015 Watal M. Iwasaki Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://heavywatal.github.io/rtumopp/articles/benchmark.html","id":"run-simulation-with-benchmark-information","dir":"Articles","previous_headings":"","what":"Run simulation with benchmark information","title":"Efficiency of tumopp","text":"","code":"library(tumopp)  .const = list(D = 3, C = \"hex\", k = 10, N = 2 ** 17, benchmark = TRUE) .alt = list(   L = c(\"const\", \"linear\"),   P = c(\"random\", \"mindrag\"),   d = c(0, 0.2),   m = c(0, 2) ) args_tbl = tumopp::make_args(alt = .alt, const = .const) |> print() ## # A tibble: 16 × 9 ##    L      P           d     m     D C         k      N benchmark ##    <chr>  <chr>   <dbl> <dbl> <dbl> <chr> <dbl>  <dbl> <lgl>     ##  1 const  mindrag   0       0     3 hex      10 131072 TRUE      ##  2 const  mindrag   0       2     3 hex      10 131072 TRUE      ##  3 const  mindrag   0.2     0     3 hex      10 131072 TRUE      ##  4 const  mindrag   0.2     2     3 hex      10 131072 TRUE      ##  5 const  random    0       0     3 hex      10 131072 TRUE      ##  6 const  random    0       2     3 hex      10 131072 TRUE      ##  7 const  random    0.2     0     3 hex      10 131072 TRUE      ##  8 const  random    0.2     2     3 hex      10 131072 TRUE      ##  9 linear mindrag   0       0     3 hex      10 131072 TRUE      ## 10 linear mindrag   0       2     3 hex      10 131072 TRUE      ## 11 linear mindrag   0.2     0     3 hex      10 131072 TRUE      ## 12 linear mindrag   0.2     2     3 hex      10 131072 TRUE      ## 13 linear random    0       0     3 hex      10 131072 TRUE      ## 14 linear random    0       2     3 hex      10 131072 TRUE      ## 15 linear random    0.2     0     3 hex      10 131072 TRUE      ## 16 linear random    0.2     2     3 hex      10 131072 TRUE set.seed(24601L) results = tumopp::tumopp(args_tbl, graph = FALSE) |> print()  unnested = results |>   dplyr::select(!c(population, seed)) |>   dplyr::mutate(outdir = fs::path_file(outdir)) |>   dplyr::select(where(\\(x) dplyr::n_distinct(x) > 1L)) |>   tidyr::unnest(benchmark) |>   print()  df_benchmark = unnested |>   dplyr::distinct(outdir, size, .keep_all = TRUE) |>   dplyr::mutate(     local = factor(local, levels = .alt[[\"L\"]]),     path = factor(path, levels = .alt[[\"P\"]]),     size = size / 1000,      # to K     memory = maxrss / 1024,  # K to M     utime = utime / 1000,    # ms to sec     stime = stime / 1000,    # ms to sec     maxrss = NULL   ) |>   print()  # usethis::use_data(df_benchmark, internal = TRUE, overwrite = TRUE)"},{"path":"https://heavywatal.github.io/rtumopp/articles/benchmark.html","id":"memory","dir":"Articles","previous_headings":"","what":"Memory","title":"Efficiency of tumopp","text":"Memory usage increases linearly increasing number cells tumopp individual-based model tumor cells. Memory also used trace back cell lineages write text file growth simulation. Cell death makes cell lineages longer given number extant cells. effect cell death pronounced population average birth rate decreased local competition (-Llinear).","code":"ggplot(df_benchmark) +   aes(size, memory) +   geom_line(linewidth = 1, color = \"#337ab7\") +   facet_grid(vars(local, path), vars(delta0, rho0), label = label_both) +   labs(x = \"Size (K cells)\", y = \"Memory (MB)\")"},{"path":"https://heavywatal.github.io/rtumopp/articles/benchmark.html","id":"time","dir":"Articles","previous_headings":"","what":"Time","title":"Efficiency of tumopp","text":"(-Pmindrag) search nearest empty sites dividing cells, (-Lconst) push cells, (-Llinear) skip event queues dormant (surrounded) cells. combination -Lconst -Pmindrag slower others involves search push interior cells. effects cell death migration smaller local competition (-L) placement daughter cells(-P).","code":"ggplot(df_benchmark) +   aes(size, utime + stime) +   geom_line(linewidth = 1, color = \"#337ab7\") +   facet_grid(vars(local, path), vars(delta0, rho0), label = label_both) +   labs(x = \"Size (K cells)\", y = \"Time (sec)\")"},{"path":"https://heavywatal.github.io/rtumopp/articles/sampling.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Multi-region sampling","text":"Perform simulation extract population data: Sample cells put neutral mutations lineages: Estimate FSTF_{ST} VAF. Summarize visualize VAF:","code":"library(ggplot2) library(tumopp) set.seed(24601L) result = tumopp::tumopp(\"-N20000 -D3 -Chex -Lconst -k10\") population = result$population[[1L]] graph = result$graph[[1L]] extant = population |> tumopp::filter_extant() ncell = 200L regions = tumopp::sample_uniform_regions(extant, nsam = 4L, ncell = ncell) subgraph = tumopp::subtree(graph, unlist(regions$id)) vaf = tumopp::make_vaf(subgraph, regions$id, mu = 8.0) |> print() ## # A tibble: 29,148 × 4 ##      `1`   `2`   `3`   `4` ##    <dbl> <dbl> <dbl> <dbl> ##  1     0     0 0.005     0 ##  2     0     0 0.005     0 ##  3     0     0 0.005     0 ##  4     0     0 0.005     0 ##  5     0     0 0.005     0 ##  6     0     0 0.005     0 ##  7     0     0 0.005     0 ##  8     0     0 0.005     0 ##  9     0     0 0.005     0 ## 10     0     0 0.005     0 ## # ℹ 29,138 more rows tumopp::dist_vaf(vaf, ncell) |> tumopp::fst() ## [1] 0.04366493  # True FST from cell genealogy tumopp::dist_genealogy(subgraph, regions$id) |> tumopp::fst() ## [1] 0.04549526 vaf_tidy = vaf |>   tumopp::filter_detectable(0.01) |>   tumopp::sort_vaf() |>   tumopp::longer_vaf() |>   print()  ggplot(vaf_tidy) +   aes(sample, site) +   geom_tile(aes(fill = frequency)) +   scale_fill_distiller(palette = \"Spectral\", limit = c(0, 1), guide = FALSE) +   coord_cartesian(expand = FALSE)"},{"path":"https://heavywatal.github.io/rtumopp/articles/tumopp.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Introduction to tumopp","text":"R interface tumopp, tumor growth simulator C++. parameter values resulting populations returned nested tibble. See ?tumopp details.","code":"library(tumopp) set.seed(24601L) result = tumopp::tumopp(\"-D3 -Cmoore -k10 -N1000\") colnames(result) ##  [1] \"alpha0\"     \"benchmark\"  \"beta0\"      \"coord\"      \"delta0\"     ##  [6] \"dimensions\" \"extinction\" \"interval\"   \"local\"      \"ma\"         ## [11] \"max\"        \"max_time\"   \"mb\"         \"md\"         \"mm\"         ## [16] \"mutate\"     \"origin\"     \"outdir\"     \"path\"       \"plateau\"    ## [21] \"prolif\"     \"record\"     \"resistant\"  \"rho0\"       \"sa\"         ## [26] \"sb\"         \"sd\"         \"seed\"       \"shape\"      \"sm\"         ## [31] \"symmetric\"  \"treatment\"  \"ua\"         \"ub\"         \"ud\"         ## [36] \"um\"         \"verbose\"    \"population\" \"graph\" result$population[[1L]] |> dplyr::arrange(id) ## # A tibble: 1,999 × 8 ##        x     y     z    id ancestor birth death omega ##    <int> <int> <int> <int>    <int> <dbl> <dbl> <int> ##  1     0     0     0     1        0  0     1.36    -1 ##  2     0     0     0     2        1  1.36  2.04    -1 ##  3     0     0     1     3        1  1.36  2.37    -1 ##  4     0     0     0     4        2  2.04  2.69    -1 ##  5    -1     1     0     5        2  2.04  3.07    -1 ##  6     0     0     1     6        3  2.37  3.48    -1 ##  7     1     0     2     7        3  2.37  3.15    -1 ##  8     0     0     0     8        4  2.69  3.41    -1 ##  9     0    -1    -1     9        4  2.69  3.52    -1 ## 10    -1     1     0    10        5  3.07  4.43    -1 ## # ℹ 1,989 more rows"},{"path":"https://heavywatal.github.io/rtumopp/articles/tumopp.html","id":"explore-parameter-space","dir":"Articles","previous_headings":"","what":"Explore parameter space","title":"Introduction to tumopp","text":"parameter grid can generated make_args(). See tumopp(\"--help\") C++ library documentation generated doxygen available parameters.","code":".const = list(D = 3L, C = \"hex\", N = 1000L) .alt = list(   k = c(\"1\", \"1e6\"),   L = c(\"const\", \"linear\", \"step\"),   P = c(\"random\", \"mindrag\") )  # Generate combinations of arguments args_table = tumopp::make_args(alt = .alt, const = .const, each = 1L) |> print() ## # A tibble: 12 × 6 ##    k     L      P           D C         N ##    <chr> <chr>  <chr>   <int> <chr> <int> ##  1 1     const  mindrag     3 hex    1000 ##  2 1     const  random      3 hex    1000 ##  3 1     linear mindrag     3 hex    1000 ##  4 1     linear random      3 hex    1000 ##  5 1     step   mindrag     3 hex    1000 ##  6 1     step   random      3 hex    1000 ##  7 1e6   const  mindrag     3 hex    1000 ##  8 1e6   const  random      3 hex    1000 ##  9 1e6   linear mindrag     3 hex    1000 ## 10 1e6   linear random      3 hex    1000 ## 11 1e6   step   mindrag     3 hex    1000 ## 12 1e6   step   random      3 hex    1000  # Concurrent execution results = tumopp::tumopp(args_table) results |>   dplyr::select(!c(outdir, seed, where(is.list))) |>   dplyr::select(where(\\(x) dplyr::n_distinct(x) > 1L)) ## # A tibble: 12 × 4 ##    args  local  path      shape ##    <chr> <chr>  <chr>     <dbl> ##  1 1     const  mindrag       1 ##  2 2     const  random        1 ##  3 3     linear mindrag       1 ##  4 4     linear random        1 ##  5 5     step   mindrag       1 ##  6 6     step   random        1 ##  7 7     const  mindrag 1000000 ##  8 8     const  random  1000000 ##  9 9     linear mindrag 1000000 ## 10 10    linear random  1000000 ## 11 11    step   mindrag 1000000 ## 12 12    step   random  1000000"},{"path":"https://heavywatal.github.io/rtumopp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Watal M. Iwasaki. Author, maintainer.","code":""},{"path":"https://heavywatal.github.io/rtumopp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"W. M. Iwasaki H. Innan (2017). Simulation Framework Generating Intratumor Heterogeneity Patterns Cancer Cell Population. PLOS ONE 12(9): e0184229","code":"@Article{,   title = {Simulation Framework for Generating Intratumor Heterogeneity Patterns in a Cancer Cell Population},   author = {Watal M. Iwasaki and Hideki Innan},   journal = {PLOS ONE},   year = {2017},   volume = {12},   number = {9},   pages = {e0184229},   url = {https://doi.org/10.1371/journal.pone.0184229}, }"},{"path":"https://heavywatal.github.io/rtumopp/index.html","id":"r-interface-to-tumopp","dir":"","previous_headings":"","what":"R interface to tumopp, a tumor growth simulator in C++","title":"R interface to tumopp, a tumor growth simulator in C++","text":"R interface tumopp, tumor growth simulator C++.","code":""},{"path":"https://heavywatal.github.io/rtumopp/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"R interface to tumopp, a tumor growth simulator in C++","text":"Unix-like OS (macOS, Linux, etc.) C++17 compiler (clang++ >= Apple clang 11.0, g++ >= 9.1) CMake","code":""},{"path":"https://heavywatal.github.io/rtumopp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R interface to tumopp, a tumor growth simulator in C++","text":"R packages updated random times. Please try check updates use latest versions.","code":"install.packages(\"pak\") pak::pak(\"heavywatal/rtumopp\") update.packages() pak::pak(\"heavywatal/rigraphlite\") pak::pak(\"heavywatal/rtumopp\")"},{"path":"https://heavywatal.github.io/rtumopp/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"R interface to tumopp, a tumor growth simulator in C++","text":"See “Get started” page. Available parameters listed API document C++ tumopp.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities for coordinate values — max_abs_xyz","title":"Utilities for coordinate values — max_abs_xyz","text":"max_abs_xyz extracts max values plot limits.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities for coordinate values — max_abs_xyz","text":"","code":"max_abs_xyz(.tbl)  dist_euclidean(.tbl, point = c(x = 0, y = 0, z = 0))  transform_rotate(.tbl, theta, axis = c(\"z\", \"x\", \"y\"))"},{"path":"https://heavywatal.github.io/rtumopp/reference/coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities for coordinate values — max_abs_xyz","text":".tbl data.frame (x, y, z) columns point named vector tibble theta radian angle axis string","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/coord.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utilities for coordinate values — max_abs_xyz","text":"dist_euclidean calculates distance specified cell. rotate modifies coordinates centering specified axis.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/coord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilities for coordinate values — max_abs_xyz","text":"","code":"max_abs_xyz(data.frame(x = 2, y = -3, z = 4)) #> [1] 4"},{"path":"https://heavywatal.github.io/rtumopp/reference/cuboid.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary expression of cell existence — as_cuboid","title":"Binary expression of cell existence — as_cuboid","text":"as_cuboid() expand coordinate set binary cuboid zero-padding. data.frame representation ordered way array representation. extra attributes ensure round-trip conversion.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/cuboid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary expression of cell existence — as_cuboid","text":"","code":"as_cuboid(x, expand = 0L)  # S3 method for class 'cuboid' as.data.frame(x, row.names = NULL, optional = FALSE, ...)  # S3 method for class 'cuboid' as.array(x, ...)"},{"path":"https://heavywatal.github.io/rtumopp/reference/cuboid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary expression of cell existence — as_cuboid","text":"x data.frame (x, y, z) 3D array. expand integer. row.names, optional, ... ignored; suppress warnings S3 methods.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/demography.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for event history — extract_history","title":"Functions for event history — extract_history","text":"extract_history extracts birth death events raw population data.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/demography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for event history — extract_history","text":"","code":"extract_history(population)  summarize_demography(history)"},{"path":"https://heavywatal.github.io/rtumopp/reference/demography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for event history — extract_history","text":"population data.frame history data.frame extract_history()","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/demography.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for event history — extract_history","text":"summarize_demography simplifies history.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities for dispersion summary_row() and mutate_chisq() calculate various dispersion stats. stats_dispersion() is a shortcut to call them both at once. — stats_dispersion","title":"Utilities for dispersion summary_row() and mutate_chisq() calculate various dispersion stats. stats_dispersion() is a shortcut to call them both at once. — stats_dispersion","text":"Utilities dispersion summary_row() mutate_chisq() calculate various dispersion stats. stats_dispersion() shortcut call .","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities for dispersion summary_row() and mutate_chisq() calculate various dispersion stats. stats_dispersion() is a shortcut to call them both at once. — stats_dispersion","text":"","code":"stats_dispersion(x)  summary_row(x)  mutate_chisq(.data, ...)  rpois_dispersion(n, lambda, nrep = 1L)  tibble_dchisq(x, n)"},{"path":"https://heavywatal.github.io/rtumopp/reference/dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities for dispersion summary_row() and mutate_chisq() calculate various dispersion stats. stats_dispersion() is a shortcut to call them both at once. — stats_dispersion","text":"x numeric vector. .data data.frame. ... passed dplyr::mutate(). n, lambda passed stats::rpois(). nrep number replications.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/dispersion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utilities for dispersion summary_row() and mutate_chisq() calculate various dispersion stats. stats_dispersion() is a shortcut to call them both at once. — stats_dispersion","text":"rpois_dispersion() summarizes results stats::rpois(). tibble_dchisq() generates tibble.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate genetic distance from genealogy or VAF — dist_genealogy","title":"Calculate genetic distance from genealogy or VAF — dist_genealogy","text":"Calculate genetic distance genealogy VAF","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate genetic distance from genealogy or VAF — dist_genealogy","text":"","code":"dist_genealogy(graph, cell_ids)  dist_vaf(vaf, ncell = Inf)  pairwise_distances(graph, regions)"},{"path":"https://heavywatal.github.io/rtumopp/reference/distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate genetic distance from genealogy or VAF — dist_genealogy","text":"graph igraph cell_ids id column sampled regions vaf data.frame matrix. e.g., output make_vaf(). ncell number cells per specimen regions output sample_uniform_regions()","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate genetic distance from genealogy or VAF — dist_genealogy","text":"dist_genealogy summarizes branch lengths within/regions. dist_vaf summarizes diversity within/regions. pairwise_distances summarizes physical genetic distances.","code":""},{"path":[]},{"path":"https://heavywatal.github.io/rtumopp/reference/drivers.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to deal with driver mutations — propagate_drivers","title":"Functions to deal with driver mutations — propagate_drivers","text":"Functions deal driver mutations","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/drivers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to deal with driver mutations — propagate_drivers","text":"","code":"propagate_drivers(drivers, graph)"},{"path":"https://heavywatal.github.io/rtumopp/reference/drivers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to deal with driver mutations — propagate_drivers","text":"drivers data.frame graph igraph","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/drivers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to deal with driver mutations — propagate_drivers","text":"propagate_drivers calculates effect drivers descendant cells","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/fst.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate F_ST from matrix — fst","title":"Calculate F_ST from matrix — fst","text":"Calculate F_ST matrix","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/fst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate F_ST from matrix — fst","text":"","code":"fst(m, sample_sizes = NULL)  gst(m, sample_sizes = NULL)  pairwise_fst(m, sample_sizes = NULL)"},{"path":"https://heavywatal.github.io/rtumopp/reference/fst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate F_ST from matrix — fst","text":"m matrix output dist_genealogy() dist_vaf() sample_sizes cell numbers region","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/fst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate F_ST from matrix — fst","text":"fst calculates Hudson's F_ST estimator. theta: Weir Cockerham (1984); Weir Hill (2002). N_ST: Lynch Crease (1990). <F_ST>: Hudson, Slatkin, Maddison (1992) Genetics. gst calculates Nei's F_ST estimator. G_ST, gamma_ST: Nei (1973, 1977, 1982). K_ST: Hudson, Boos, Kaplan (1992) MBE.","code":""},{"path":[]},{"path":"https://heavywatal.github.io/rtumopp/reference/graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions depending on igraph — make_igraph","title":"Functions depending on igraph — make_igraph","text":"Functions depending igraph","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions depending on igraph — make_igraph","text":"","code":"make_igraph(population)  subtree(graph, nodes = integer(0L), trim = FALSE)  subgraph_upstream(graph, vids = integer(0L), trim = FALSE)  trim_root(graph)  internal_nodes(graph, nodes, sensitivity)  distances_from_origin(   graph,   nodes = sink_cells(graph),   weights = numeric(0L),   trim = FALSE )  distances_upstream(   graph,   vids = integer(0),   weights = numeric(0L),   trim = FALSE )  sink_cells(graph)"},{"path":"https://heavywatal.github.io/rtumopp/reference/graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions depending on igraph — make_igraph","text":"population tbl graph igraph nodes integer cell IDs trim whether remove common ancestors older MRCA. vids vertex IDs sensitivity minimum allele frequency weights numeric logical. Edge attribute \"weight\" used TRUE.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions depending on igraph — make_igraph","text":"make_igraph converts raw population tbl graph. subtree() subgraph_upstream() extracts subgraph among terminal nodes. trim_root() removes ancestral nodes older MRCA. internal_nodes selects major common ancestors threshold. distances_from_origin() distances_upstream() shorthand distances(..., mode = 2L). sink_cells() returns cell IDs sink nodes.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/heterogeneity.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate heterogeneity — math_score","title":"Evaluate heterogeneity — math_score","text":"math_score calculates MATH (mutant-allele tumor heterogeneity) score variant allele frequencies.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/heterogeneity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate heterogeneity — math_score","text":"","code":"math_score(x, constant = 1.4826, na.rm = FALSE)"},{"path":"https://heavywatal.github.io/rtumopp/reference/heterogeneity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate heterogeneity — math_score","text":"x numeric vector. constant scale factor. na.rm TRUE NA values stripped     x computation takes place.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform coordinates into hexagonal grid — trans_coord_hex","title":"Transform coordinates into hexagonal grid — trans_coord_hex","text":"Transform coordinates hexagonal grid","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform coordinates into hexagonal grid — trans_coord_hex","text":"","code":"trans_coord_hex(.tbl)"},{"path":"https://heavywatal.github.io/rtumopp/reference/hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform coordinates into hexagonal grid — trans_coord_hex","text":".tbl data.frame (x, y, z) columns","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/morphology.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract surface cells with mathematical morphology — add_surface","title":"Extract surface cells with mathematical morphology — add_surface","text":"add_surface() adds binary column data.frame. add_phi() counts empty neighbors cell adds integer column.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/morphology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract surface cells with mathematical morphology — add_surface","text":"","code":"add_surface(population, coord, dimensions)  add_phi(population, coord, dimensions)"},{"path":"https://heavywatal.github.io/rtumopp/reference/morphology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract surface cells with mathematical morphology — add_surface","text":"population data.frame (x, y, z) coord string dimensions integer","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/ms.html","id":null,"dir":"Reference","previous_headings":"","what":"Sprinkle mutations on genealogy — make_sample","title":"Sprinkle mutations on genealogy — make_sample","text":"Sprinkle mutations genealogy","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/ms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sprinkle mutations on genealogy — make_sample","text":"","code":"make_sample(graph, nsam = 0L, mu = NULL, segsites = NULL)  edge_lengths(graph, mu = 0, accel = 0)"},{"path":"https://heavywatal.github.io/rtumopp/reference/ms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sprinkle mutations on genealogy — make_sample","text":"graph igraph nsam number cells sample mu mutation rate per cell division (ignored segsites given) segsites number segregating sites accel assumption undocumented yet","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/ms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sprinkle mutations on genealogy — make_sample","text":"make_sample creates genotype matrix given genealogy tree. edge_lengths() calculates lengths edges given genealogy tree.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the path to the tumopp installation. — tumopp_path","title":"Get the path to the tumopp installation. — tumopp_path","text":"Get path tumopp installation.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the path to the tumopp installation. — tumopp_path","text":"","code":"tumopp_path()  tumopp_version()"},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-biopsy.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot capture_rate ~ nsam of biopsy — plot_capture_rate","title":"Plot capture_rate ~ nsam of biopsy — plot_capture_rate","text":"Plot capture_rate ~ nsam biopsy","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-biopsy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot capture_rate ~ nsam of biopsy — plot_capture_rate","text":"","code":"plot_capture_rate(data, point = 1, alpha = 0.3, errorbar = TRUE)"},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-biopsy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot capture_rate ~ nsam of biopsy — plot_capture_rate","text":"data tbl summarize_capture_rate() evaluate_mrs() point size data point alpha opacity data point errorbar logical","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-genealogy.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize cell genealogy — augment_genealogy","title":"Visualize cell genealogy — augment_genealogy","text":"Visualize cell genealogy","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-genealogy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize cell genealogy — augment_genealogy","text":"","code":"augment_genealogy(graph, lengths = numeric(0))  gggenealogy(data, mapping = ggplot2::aes(), ...)"},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-genealogy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize cell genealogy — augment_genealogy","text":"graph igraph lengths lengths edges. edge_lengths() useful . edge attribute \"weight\" used TRUE. data tbl augment_genealogy() mapping ggplot2::aes() ... passed ggplot2::geom_segment()","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-genealogy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize cell genealogy — augment_genealogy","text":"augment_genealogy calculates coordinates nodes edges plotting. gggenealogy() creates basic ggplot object.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-rgl.html","id":null,"dir":"Reference","previous_headings":"","what":"3D plotting with rgl — plot_tumor3d","title":"3D plotting with rgl — plot_tumor3d","text":"3D plotting rgl","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-rgl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"3D plotting with rgl — plot_tumor3d","text":"","code":"plot_tumor3d(.tbl = NULL, limits = NULL)  snapshot_surface(.tbl, filename = tempfile(\"rgl_\", fileext = \".png\"), ...)  add_col(.tbl, column = \"clade\", palette = \"turbo\", ...)"},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-rgl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"3D plotting with rgl — plot_tumor3d","text":".tbl data.frame (x, y, z, col) limits passed xlim, ylim, zlim rgl::plot3d() filename string ... passed plot_tumor3d(). column column name colorcode palette name palette grDevices viridis.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-rgl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"3D plotting with rgl — plot_tumor3d","text":"plot_tumor3d plots tumor 3D rgl. snapshot_surface shortcut plot_tumor3d() rgl::snapshot3d(). add_col adds column color plot_tumor3d().","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-section.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot serial sections of 3D tumor — save_serial_section","title":"Plot serial sections of 3D tumor — save_serial_section","text":"Plot serial sections 3D tumor","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot serial sections of 3D tumor — save_serial_section","text":"","code":"save_serial_section(   .tbl,   filename = \"png/section_%03d.png\",   scale = 6,   dpi = 72,   ... )"},{"path":"https://heavywatal.github.io/rtumopp/reference/plot-section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot serial sections of 3D tumor — save_serial_section","text":".tbl tbl extant cells filename File name create disk. scale Multiplicative scaling factor. dpi Plot resolution. Also accepts string input: \"retina\" (320), \"print\" (300), \"screen\" (72). applies converting pixel units, typical raster output types. ... passed plot_lattice2d()","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot for frequency spectrum — histogram_freqspec","title":"ggplot for frequency spectrum — histogram_freqspec","text":"ggplot frequency spectrum ggplot 2D lattice","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot for frequency spectrum — histogram_freqspec","text":"","code":"histogram_freqspec(freqs)  plot_lattice2d(   .tbl,   color = \"z\",   alpha = 1,   size = 1,   limit = max_abs_xyz(.tbl) )"},{"path":"https://heavywatal.github.io/rtumopp/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot for frequency spectrum — histogram_freqspec","text":"freqs numeric vector .tbl tbl extant cells color column name colorcode alpha opacity [0, 1] size relative size points limit value range","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/population.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to modify population data.frame — filter_extant","title":"Functions to modify population data.frame — filter_extant","text":"filter_extant collects extant cells end simulation.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to modify population data.frame — filter_extant","text":"","code":"filter_extant(population)  count_extant(population)  filter_common_ancestors(population, threshold = 0.05)"},{"path":"https://heavywatal.github.io/rtumopp/reference/population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to modify population data.frame — filter_extant","text":"population tibble threshold minimum frequency detectable alleles","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/population.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to modify population data.frame — filter_extant","text":"count_extant counts number extant cells filter_common_ancestors collects major common ancestors.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TSV files in given directories — read_confs","title":"Read TSV files in given directories — read_confs","text":"read_confs reads config files.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TSV files in given directories — read_confs","text":"","code":"read_confs(indirs = getwd(), mc.cores = getOption(\"mc.cores\", 1L))  read_results(   indirs = getwd(),   graph = getOption(\"tumopp.graph\", TRUE),   mc.cores = getOption(\"mc.cores\", 1L) )  read_tumopp(file)"},{"path":"https://heavywatal.github.io/rtumopp/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TSV files in given directories — read_confs","text":"indirs string vector mc.cores number cores use concurrent execution. graph add graph column TRUE file passed first argument readr::read_tsv()","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read TSV files in given directories — read_confs","text":"read_results reads configs populations nested tibble. read_tumopp alias readr::read_tsv() options read result files: population.tsv.gz snapshots.tsv.gz.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/sample-combn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample cells from a population — combn_ids","title":"Sample cells from a population — combn_ids","text":"Sample cells population","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/sample-combn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample cells from a population — combn_ids","text":"","code":"combn_ids(x, m = seq_along(x))  summarize_capture_rate(combinations, population, threshold = 0.01)"},{"path":"https://heavywatal.github.io/rtumopp/reference/sample-combn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample cells from a population — combn_ids","text":"x list ID vectors m number regions sample combinations nested tibble combn_ids() population tibble threshold minimum frequency detectable alleles","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/sample-combn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample cells from a population — combn_ids","text":"combn_ids makes combinations cell IDs various number samples. summarize_capture_rate calculates expected allele capture rate various combinations samples.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample cells from a population — sample_uniform_regions","title":"Sample cells from a population — sample_uniform_regions","text":"Sample cells population","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample cells from a population — sample_uniform_regions","text":"","code":"sample_uniform_regions(tbl, nsam = 2L, ncell = 10L, jitter = 0)  sample_random_regions(tbl, nsam = 2L, ncell = 10L)  sample_bulk(tbl, center = c(x = 0, y = 0, z = 0), ncell = 10L)  sim_sample_single_cell(graph, nrep = 1L, ncell = 100L, mu = 0, accel = 0)  sim_sample_biopsy(   graph,   population,   nrep = 1L,   nsam = 5L,   ncell = 100L,   mu = 0,   accel = 0 )  evaluate_mrs(   population,   nsam,   ncell,   threshold = 0.05,   sensitivity = 0.05,   jitter = 0 )  distances_mrs(population, nsam, ncell, jitter = 0)"},{"path":"https://heavywatal.github.io/rtumopp/reference/sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample cells from a population — sample_uniform_regions","text":"tbl tibble extant cells id, x, y, z columns nsam number regions sample ncell number cells per specimen jitter amount random variations x y axes center named (x, y, z) vector, list, tibble graph igraph nrep number replications. mu mutation rate per cell division (ignored segsites given) accel assumption undocumented yet population tbl threshold minimum frequency detectable alleles sensitivity minimum allele frequency","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample cells from a population — sample_uniform_regions","text":"sample_uniform_regions sample uniformly distributed regions. sample_random_regions samples multiple regions random. sample_bulk samples bulk cells near specified center. evaluate_mrs shortcut evaluate multi-region sampling. distances_mrs shortcut sampling calculation","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing functions — genetic_stats","title":"Summarizing functions — genetic_stats","text":"genetic_stats calculates summary statistics genealogy.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing functions — genetic_stats","text":"","code":"genetic_stats(extant)  morphological_stats(extant, coord = \"\")"},{"path":"https://heavywatal.github.io/rtumopp/reference/summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing functions — genetic_stats","text":"extant data.frame extant cells coord switch normalize phi","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/summarize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarizing functions — genetic_stats","text":"morphological_stats calculates summary statistics morphology.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/tumopp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tumopp: R interface to tumopp, a tumor growth simulator in C++ — tumopp-package","title":"tumopp: R interface to tumopp, a tumor growth simulator in C++ — tumopp-package","text":"R interface tumopp, tumor growth simulator C++.","code":""},{"path":[]},{"path":"https://heavywatal.github.io/rtumopp/reference/tumopp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tumopp: R interface to tumopp, a tumor growth simulator in C++ — tumopp-package","text":"Maintainer: Watal M. Iwasaki heavywatal@gmail.com (ORCID)","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/tumopp.html","id":null,"dir":"Reference","previous_headings":"","what":"Run tumopp — tumopp","title":"Run tumopp — tumopp","text":"tumopp() returns full results config columns data.frame. See tumopp(\"-h\") https://heavywatal.github.io/tumopp/group__params.html list command options.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/tumopp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run tumopp — tumopp","text":"","code":"tumopp(args, ...)  # Default S3 method tumopp(   args = character(0L),   ...,   graph = getOption(\"tumopp.graph\", TRUE),   cache = NULL )  # S3 method for class 'list' tumopp(args, ..., graph = TRUE, mc.cores = getOption(\"mc.cores\", 1L))  # S3 method for class 'data.frame' tumopp(args, ..., graph = TRUE, mc.cores = getOption(\"mc.cores\", 1L))  make_args(alt, const = NULL, times = 1L, each = 1L)"},{"path":"https://heavywatal.github.io/rtumopp/reference/tumopp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run tumopp — tumopp","text":"args command line arguments string vector list strings. ... used. graph add graph column TRUE cache parent directory cache results. TRUE equivalent getOption(\"tumopp.cache\", \"~/.cache/tumopp\"). tempdir() used cases including default (NULL), discarded end R session. Set FALSE force tumopp run overwrite previous results . mc.cores number cores use concurrent execution. alt named list altered arguments. const named list constant arguments. times, passed rep()","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/tumopp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run tumopp — tumopp","text":"population data.frame includes ancestral cells. Extant cells can extracted filtering death == 0 filter_extant() function. sampling time, .e., end simulation, typically maximum value birth time. default unit time (birth death columns) average cell cycle newborn cells (given parameter -b/--beta0 set 1). example, step-wise tumor growth integer values birth column observed -k/--shape parameter set large value like 10**6. considering cell line whose average cell cycle 4 days example, unit columns can interpreted 4 days, can set --beta0=0.25 change unit day. omega column denotes number cell divisions allowed cell. Negative values denote unlimited proliferation potential. make_args() returns argument combinations tibble.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/vaf.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities for variant allele frequency — make_vaf","title":"Utilities for variant allele frequency — make_vaf","text":"Utilities variant allele frequency","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/vaf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities for variant allele frequency — make_vaf","text":"","code":"make_vaf(graph, samples, mu, accel = 0)  make_longer_vaf(graph, samples, mu, threshold = 0.05)  longer_vaf(vaf)  filter_detectable(vaf, threshold)  sort_vaf(vaf, method = c(\"average\", \"ward.D2\", \"complete\", \"single\"))"},{"path":"https://heavywatal.github.io/rtumopp/reference/vaf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities for variant allele frequency — make_vaf","text":"graph igraph samples list integer IDs mu mutation rate per cell division (ignored segsites given) accel assumption undocumented yet threshold minimum detectable frequency vaf output make_vaf() method passed stats::hclust","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/vaf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utilities for variant allele frequency — make_vaf","text":"make_vaf generates neutral VAF pattern cell genealogy. make_longer_vaf shortcut make VAF longer format. longer_vaf transforms vaf table. filter_detectable removes sites freq < threshold. sort_vaf reorders rows columns VAF table.","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/write.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities for writing files — write_results","title":"Utilities for writing files — write_results","text":"Utilities writing files","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities for writing files — write_results","text":"","code":"write_results(results)"},{"path":"https://heavywatal.github.io/rtumopp/reference/write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities for writing files — write_results","text":"results data.frame returned tumopp()","code":""},{"path":"https://heavywatal.github.io/rtumopp/reference/write.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utilities for writing files — write_results","text":"write_results writes nested data.frame files","code":""}]
